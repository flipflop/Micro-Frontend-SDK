{
  "version": 3,
  "sources": ["../../app/entry.client.tsx", "../../app/src/createEmotionCache.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport { useState } from 'react';\nimport { hydrate } from 'react-dom';\nimport { RemixBrowser } from 'remix';\nimport { CacheProvider } from '@emotion/react';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport ClientStyleContext from './src/ClientStyleContext';\nimport createEmotionCache from './src/createEmotionCache';\nimport theme from './src/theme';\n\ninterface ClientCacheProviderProps {\n  children: React.ReactNode;\n}\nfunction ClientCacheProvider({ children }: ClientCacheProviderProps) {\n  const [cache, setCache] = useState(createEmotionCache());\n\n  function reset() {\n    setCache(createEmotionCache());\n  }\n\n  return (\n    <ClientStyleContext.Provider value={{ reset }}>\n      <CacheProvider value={cache}>{children}</CacheProvider>\n    </ClientStyleContext.Provider>\n  );\n}\n\nhydrate(\n  <ClientCacheProvider>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <RemixBrowser />\n    </ThemeProvider>\n  </ClientCacheProvider>,\n  document,\n);\n", "import createCache from '@emotion/cache';\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'css' });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA,aAAuB;AACvB,mBAAyB;AACzB,uBAAwB;AAExB;;;ACJA;AAAA;AAEe,8BAA8B;AAC3C,SAAO,kCAAY,EAAE,KAAK;AAAA;;;ADW5B,6BAA6B,EAAE,YAAsC;AACnE,QAAM,CAAC,OAAO,YAAY,2BAAS;AAEnC,mBAAiB;AACf,aAAS;AAAA;AAGX,SACE,qCAAC,2BAAmB,UAApB;AAAA,IAA6B,OAAO,EAAE;AAAA,KACpC,qCAAC,eAAD;AAAA,IAAe,OAAO;AAAA,KAAQ;AAAA;AAKpC,8BACE,qCAAC,qBAAD,MACE,qCAAC,uBAAD;AAAA,EAAe,OAAO;AAAA,GAEpB,qCAAC,qBAAD,OACA,qCAAC,cAAD,SAGJ;",
  "names": []
}
